@page "/Signin"
@inject NavigationManager Nav
@inject Database.dataBase db
@using Database;

<head>
    <style>
        body {
            background-color: #296648;
        }
        .inputs {
            color: #EBFFF4;
        }
        .Button{
            height: 22px;
            width: 120px;
            top: 60%;
            right: 49%;
            position: absolute;
            font-size: 15px;
            color: #9F5600;
            background-color: #EBFFF4;
            outline: none;
            border: none; 
        }
        .userinput{
            height: 25px;
            width: 180px;
            top: 40%;
            left: 40%;
            color: #9F5600;
            background-color: #EBFFF4;
            outline: none;
            border: none; 
            position: absolute;
            font-size: 15px;
        }
        .passinput{
            height: 25px;
            width: 180px;
            top: 50%;
            left: 40%;
            color: #9F5600;
            background-color: #EBFFF4;
            outline: none;
            border: none; 
            position: absolute;
            font-size: 15px;
        }
    </style>
</head>
<div class="inputs">
    <input class="userinput" type="text" @bind="@username" id="Username" required title="This username already exists"/>
    <input class="passinput" type="password" @bind="@password" id="Password" required title="This password already exists"/>
    <button class="Button" @onclick="@AddUser">Sign in</button>
</div>

@code{
    public bool LogedIn = false;
    public static string username = "";
    public static string password = "";
    //method to create a new user
    public void AddUser()
    {
        Users U1 = new Users();
        U1.UserID = UserInt();
        U1.UserName = username;
        U1.Password = password;
        db.SaveItem(U1);
        LogedIn = true;
        Nav.NavigateTo("/");
    }
    int UserInt() {
    Random rand = new Random();
    return (int)rand.NextInt64((long)999);
    }
}