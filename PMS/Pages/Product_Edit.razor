@page "/ProductsEdit/{ProductID}"
@inject NavigationManager navigate
@inject Database.dataBase db
@using Database;

    <head>
        <style>
            body {
                background-color: #296648;
            }

            .Productdetails {
                color: #EBFFF4;
            }
        </style>
    </head>
    <div class="Productdetails">

        <h1>@value.Name</h1>
        <input type="text" @bind="@Name" />
        <h1>@value.Stock</h1>
        <input type="number" @bind="@stock" />
        <h1>@value.Shelf</h1>
        <input type="number" @bind="@shelf" />
        <h1>@value.Delivery</h1>
        <input type="number" @bind="@delivery" />
        <h1>@value.Price</h1>
        <input type="number" @bind="@price"/>
        <h1>@value.Cost</h1>
        <input type="number" @bind="@buy"/>

        <button @onclick="@Changes">Complete changes</button>
        <button @onclick="() => {CancelNavigate(value);}">Cancel</button>
    </div>

    @code{
        [Parameter]
        public string ProductID {get; set;}
        Product value = null;
        public string Name = "";
        public int stock = 0;
        public int shelf = 0;
        public int delivery = 0;
        public int price = 0;
        public int buy = 0;
        
        public void Changes()
        {
            Product P1 = value;
            P1.Name = Name;
            P1.Stock = stock;
            P1.Shelf = shelf;
            P1.Delivery = delivery;
            P1.Cost = buy;
            P1.Price =price;
            db.SaveItem(P1);
            navigate.NavigateTo("/");
        }
    public void DefineAttributes()
    {
        string val = ProductID;
        int prodId = Convert.ToInt32(val);
        value = db.store.Find(x => x.ProductID == prodId);
    }   
    public void CancelNavigate(Product product)
    {
      navigate.NavigateTo($"/View/{product.ProductID}");
    }
}
  
